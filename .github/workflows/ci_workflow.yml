name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'  # Use the appropriate version for your project

      - name: Build project
        run: dotnet build --configuration Release

      - name: Scan with Checkmarx
        env:
          CHECKMARX_URL: ${{ secrets.CHECKMARX_URL }}  # Your Checkmarx instance URL
          CHECKMARX_USERNAME: ${{ secrets.CHECKMARX_USERNAME }}  # Your Checkmarx username
          CHECKMARX_PASSWORD: ${{ secrets.CHECKMARX_PASSWORD }}  # Your Checkmarx password
        run: |
          echo "Scanning code with Checkmarx..."
          # Command to initiate Checkmarx scan
          # This is an example command; replace it with your actual Checkmarx CLI command
          checkmarx-cli scan --url $CHECKMARX_URL --username $CHECKMARX_USERNAME --password $CHECKMARX_PASSWORD

      - name: Publish Artifact
        run: |
          echo "Publishing artifact..."
          dotnet publish -c Release -o ./output
          echo "Artifact published to ./output."

      # - name: Upload Artifact to Octopus Deploy
      #   env:
      #     OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}  # Your Octopus Deploy API key
      #     OCTOPUS_SERVER: ${{ secrets.OCTOPUS_SERVER }}  # Your Octopus Deploy server URL
      #   run: |
      #     echo "Uploading artifact to Octopus Deploy..."
      #     curl -X POST "$OCTOPUS_SERVER/api/packages/raw" \
      #          -H "X-Octopus-ApiKey: $OCTOPUS_API_KEY" \
      #          -F "file=@./output/your_project_name.zip" \
      #          -F "version=1.0.0" \
      #          -F "packageId=YourPackageId"
      #     echo "Artifact uploaded to Octopus Deploy."
