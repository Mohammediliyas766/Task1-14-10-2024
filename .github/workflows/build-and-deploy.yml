name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet publish -c Release -o ./build

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    - name: Install Octopus CLI
      run: choco install octopustools -y

    - name: Package build artifacts
      run: |
        octo pack --id="HelloWorldAPI" --format="zip" --version="1.0.${{ github.run_number }}" --basePath="./build"

    - name: Push package to Octopus Deploy
      env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_HOST: ${{ secrets.OCTOPUS_SERVER }}
      run: |
        octo push --package="HelloWorldAPI.1.0.${{ github.run_number }}.zip" --server="$env:OCTOPUS_HOST" --apiKey="$env:OCTOPUS_API_KEY" --space="Default"

    - name: List Octopus Deploy Projects
      env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_HOST: ${{ secrets.OCTOPUS_SERVER }}
      run: |
        octo list-projects --server="$env:OCTOPUS_HOST" --apiKey="$env:OCTOPUS_API_KEY" --space="Default"

    - name: Create a release in Octopus Deploy
      env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_HOST: ${{ secrets.OCTOPUS_SERVER }}
      run: |
        $projectName = "Hello World API"
        Write-Host "Attempting to create release for project: $projectName"
        octo create-release --project="$projectName" --deployTo="Development" --server="$env:OCTOPUS_HOST" --apiKey="$env:OCTOPUS_API_KEY" --space="Default"
